@model ContentManager.ViewModels.EditableTourViewModel
@using System.Collections.ObjectModel
@using HoloTour.ViewModels
@{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TourModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="container">
                <div id="rowImage" class="row">
                    <div class="col-md-12">
                        <img src="data:image/png;base64,@(Html.Raw(Convert.ToBase64String(Model.ImageBytes)))" alt="@Model.Name" />

                    </div>
                </div>
                <div id="rowName" class="row">
                    <div class="col-md-2">
                        <label> Tour Name:</label>
                    </div>
                    <div class="col-md-10">
                        @Html.TextBoxFor(tourVm => tourVm.Name, new { @class = "fillParent" }) <br />
                    </div>
                </div>
                <div id="rowCaption" class="row">
                    <div class="col-md-2">
                        <label> Caption:</label>
                    </div>

                    <div class="col-md-10">
                        @Html.TextBoxFor(tourVm => tourVm.Caption, new { @class = "fillParent" })<br />
                    </div>
                </div>
                <div id="rowPoiheader" class="row">

                    <div class="col-md-12">
                        <label> Points of Interest:</label>
                    </div>
                </div>
                <div id="rowPoi" class="row">

                    @Html.EditorFor(tour => tour.EditablePointsOfInterest, templateName: (string)"PointsOfInterestTemplate")
                    @{


                        for (int i = 0; i < Model.EditablePointsOfInterest.Count; i++)
                        {
                            var poi = Model.EditablePointsOfInterest[0];
                            Html.HiddenFor(model => Model.EditablePointsOfInterest[i]);


                            //Html.HiddenFor(model => Model.EditablePointsOfInterest[i].Guide.Text);
                            //Html.HiddenFor(model => Model.EditablePointsOfInterest[i].Title);
                            //Html.HiddenFor(model => Model.EditablePointsOfInterest[i].Id, new { id = Model.EditablePointsOfInterest[i].Id });

                            //var id = Model.EditablePointsvar an = new {id = poi.Id };
                            //Model.EditablePointsOfInterest[i].Id > 1
                            //new { id = Model.EditablePointsOfInterest[i].Id }
                            // Html.CheckBoxFor(model => Model.EditablePointsOfInterest[i].Id > 1);

                            <label>@Model.EditablePointsOfInterest[i].Title</label>
                            @*<input type="hidden" name="EditablePointsOfInterest" />*@
                        }
                    }
                </div>

            </div>

        </div>
    </div>

    @*@Html.Script(
            @<script type="text/javascript">
            </script>

        )*@
}
